[
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Resume",
    "section": "",
    "text": "Download PDF file."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ouwen Jia",
    "section": "",
    "text": "Hi this is Owen, welcome to my website."
  },
  {
    "objectID": "blog/project1/index.html",
    "href": "blog/project1/index.html",
    "title": "This is Project 1",
    "section": "",
    "text": "I cleaned some data\n\n\n\nI analyzed the data\n#| message: false\nlibrary(tidyverse) mtcars |&gt; ggplot(aes(x = wt, y = mpg)) + geom_point()"
  },
  {
    "objectID": "blog/project1/index.html#section-1-data",
    "href": "blog/project1/index.html#section-1-data",
    "title": "This is Project 1",
    "section": "",
    "text": "I cleaned some data"
  },
  {
    "objectID": "blog/project1/index.html#section-2-analysis",
    "href": "blog/project1/index.html#section-2-analysis",
    "title": "This is Project 1",
    "section": "",
    "text": "I analyzed the data\n#| message: false\nlibrary(tidyverse) mtcars |&gt; ggplot(aes(x = wt, y = mpg)) + geom_point()"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "My Projects",
    "section": "",
    "text": "Matching Donations and Charitable Giving: A Replication Study\n\n\n\n\nOuwen Jia\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlueprinty Case Study\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOuwen Jia\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoisson Regression Examples\n\n\n\n\nOuwen Jia\nMay 5, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/project2/index.html",
    "href": "blog/project2/index.html",
    "title": "Ouwen Jia",
    "section": "",
    "text": "Hi this is Owen, welcome to my website."
  },
  {
    "objectID": "blog/project1/project1_index.html",
    "href": "blog/project1/project1_index.html",
    "title": "This is Project 1",
    "section": "",
    "text": "I cleaned some data\n\n\n\nI analyzed the data\n#| message: false\nlibrary(tidyverse) mtcars |&gt; ggplot(aes(x = wt, y = mpg)) + geom_point()"
  },
  {
    "objectID": "blog/project1/project1_index.html#section-1-data",
    "href": "blog/project1/project1_index.html#section-1-data",
    "title": "This is Project 1",
    "section": "",
    "text": "I cleaned some data"
  },
  {
    "objectID": "blog/project1/project1_index.html#section-2-analysis",
    "href": "blog/project1/project1_index.html#section-2-analysis",
    "title": "This is Project 1",
    "section": "",
    "text": "I analyzed the data\n#| message: false\nlibrary(tidyverse) mtcars |&gt; ggplot(aes(x = wt, y = mpg)) + geom_point()"
  },
  {
    "objectID": "blog/project2/project2_index.html",
    "href": "blog/project2/project2_index.html",
    "title": "Ouwen Jia",
    "section": "",
    "text": "Hi this is Owen, welcome to my website."
  },
  {
    "objectID": "blog/project3/hw2_questions.html",
    "href": "blog/project3/hw2_questions.html",
    "title": "Poisson Regression Examples",
    "section": "",
    "text": "Blueprinty is a small firm that makes software for developing blueprints specifically for submitting patent applications to the US patent office. Their marketing team would like to make the claim that patent applicants using Blueprinty’s software are more successful in getting their patent applications approved. Ideal data to study such an effect might include the success rate of patent applications before using Blueprinty’s software and after using it. Unfortunately, such data is not available.\nHowever, Blueprinty has collected data on 1,500 mature (non-startup) engineering firms. The data include each firm’s number of patents awarded over the last 5 years, regional location, age since incorporation, and whether or not the firm uses Blueprinty’s software. The marketing team would like to use this data to make the claim that firms using Blueprinty’s software are more successful in getting their patent applications approved.\n\n\n\n\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\ndata &lt;- read_csv(\"blueprinty.csv\")\n\nRows: 1500 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): region\ndbl (3): patents, age, iscustomer\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata &lt;- data %&gt;%\n  mutate(\n    iscustomer = factor(iscustomer, levels = c(0, 1), labels = c(\"Non-Customer\", \"Customer\"))\n  )\n\n\n\n\nggplot(data, aes(x = patents, fill = iscustomer)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  labs(\n    title = \"Number of Patents by Customer Status\",\n    x = \"Patents (Last 5 Years)\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;%\n  group_by(iscustomer) %&gt;%\n  summarise(\n    count = n(),\n    mean_patents = mean(patents),\n    sd_patents = sd(patents)\n  )\n\n# A tibble: 2 × 4\n  iscustomer   count mean_patents sd_patents\n  &lt;fct&gt;        &lt;int&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1 Non-Customer  1019         3.47       2.23\n2 Customer       481         4.13       2.55\n\n\nWe observe that Blueprinty customers, on average, have more patents over the past five years. However, this comparison does not yet account for potential confounding variables.\n\n\n\n\nggplot(data, aes(x = region, fill = iscustomer)) +\n  geom_bar(position = \"fill\") +\n  labs(\n    title = \"Regional Distribution by Customer Status\",\n    x = \"Region\",\n    y = \"Proportion of Firms\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThere are noticeable regional differences in customer adoption. Some regions appear to have a higher share of Blueprinty customers.\n\n\n\n\nggplot(data, aes(x = age, fill = iscustomer)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  labs(\n    title = \"Firm Age Distribution by Customer Status\",\n    x = \"Age (Years Since Incorporation)\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;%\n  group_by(iscustomer) %&gt;%\n  summarise(\n    mean_age = mean(age),\n    sd_age = sd(age)\n  )\n\n# A tibble: 2 × 3\n  iscustomer   mean_age sd_age\n  &lt;fct&gt;           &lt;dbl&gt;  &lt;dbl&gt;\n1 Non-Customer     26.1   6.95\n2 Customer         26.9   7.81\n\n\nOn average, customers are older firms. Age may therefore be a confounding factor when evaluating patent success.\n\n\n\n\nWhile customers have more patents on average, they also differ in age and region. These structural differences suggest we should adjust for confounding variables in any attempt to infer a causal impact of Blueprinty’s software.\n\n\n\nSince our outcome variable of interest can only be small integer values per a set unit of time, we can use a Poisson density to model the number of patents awarded to each engineering firm over the last 5 years. We start by estimating a simple Poisson model via Maximum Likelihood.\ntodo: Write down mathematically the likelihood for \\(Y \\sim \\text{Poisson}(\\lambda)\\). Note that \\(f(Y|\\lambda) = e^{-\\lambda}\\lambda^Y/Y!\\).\ntodo: Code the likelihood (or log-likelihood) function for the Poisson model. This is a function of lambda and Y. For example:\npoisson_loglikelihood &lt;- function(lambda, Y){\n   ...\n}\ntodo: Use your function to plot lambda on the horizontal axis and the likelihood (or log-likelihood) on the vertical axis for a range of lambdas (use the observed number of patents as the input for Y).\ntodo: If you’re feeling mathematical, take the first derivative of your likelihood or log-likelihood, set it equal to zero and solve for lambda. You will find lambda_mle is Ybar, which “feels right” because the mean of a Poisson distribution is lambda.\ntodo: Find the MLE by optimizing your likelihood function with optim() in R or sp.optimize() in Python.\n\n\n\nNext, we extend our simple Poisson model to a Poisson Regression Model such that \\(Y_i = \\text{Poisson}(\\lambda_i)\\) where \\(\\lambda_i = \\exp(X_i'\\beta)\\). The interpretation is that the success rate of patent awards is not constant across all firms (\\(\\lambda\\)) but rather is a function of firm characteristics \\(X_i\\). Specifically, we will use the covariates age, age squared, region, and whether the firm is a customer of Blueprinty.\ntodo: Update your likelihood or log-likelihood function with an additional argument to take in a covariate matrix X. Also change the parameter of the model from lambda to the beta vector. In this model, lambda must be a positive number, so we choose the inverse link function g_inv() to be exp() so that \\(\\lambda_i = e^{X_i'\\beta}\\). For example:\npoisson_regression_likelihood &lt;- function(beta, Y, X){\n   ...\n}\ntodo: Use your function along with R’s optim() or Python’s sp.optimize() to find the MLE vector and the Hessian of the Poisson model with covariates. Specifically, the first column of X should be all 1’s to enable a constant term in the model, and the subsequent columns should be age, age squared, binary variables for all but one of the regions, and the binary customer variable. Use the Hessian to find standard errors of the beta parameter estimates and present a table of coefficients and standard errors.\ntodo: Check your results using R’s glm() function or Python sm.GLM() function.\ntodo: Interpret the results.\ntodo: What do you conclude about the effect of Blueprinty’s software on patent success? Because the beta coefficients are not directly interpretable, it may help to create two fake datasets: X_0 and X_1 where X_0 is the X data but with iscustomer=0 for every observation and X_1 is the X data but with iscustomer=1 for every observation. Then, use X_0 and your fitted model to get the vector of predicted number of patents (y_pred_0) for every firm in the dataset, and use X_1 to get Y_pred_1 for every firm. Then subtract y_pred_1 minus y_pred_0 and take the average of that vector of differences."
  },
  {
    "objectID": "blog/project3/hw2_questions.html#blueprinty-case-study",
    "href": "blog/project3/hw2_questions.html#blueprinty-case-study",
    "title": "Poisson Regression Examples",
    "section": "",
    "text": "Blueprinty is a small firm that makes software for developing blueprints specifically for submitting patent applications to the US patent office. Their marketing team would like to make the claim that patent applicants using Blueprinty’s software are more successful in getting their patent applications approved. Ideal data to study such an effect might include the success rate of patent applications before using Blueprinty’s software and after using it. Unfortunately, such data is not available.\nHowever, Blueprinty has collected data on 1,500 mature (non-startup) engineering firms. The data include each firm’s number of patents awarded over the last 5 years, regional location, age since incorporation, and whether or not the firm uses Blueprinty’s software. The marketing team would like to use this data to make the claim that firms using Blueprinty’s software are more successful in getting their patent applications approved.\n\n\n\n\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\ndata &lt;- read_csv(\"blueprinty.csv\")\n\nRows: 1500 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): region\ndbl (3): patents, age, iscustomer\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata &lt;- data %&gt;%\n  mutate(\n    iscustomer = factor(iscustomer, levels = c(0, 1), labels = c(\"Non-Customer\", \"Customer\"))\n  )\n\n\n\n\nggplot(data, aes(x = patents, fill = iscustomer)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  labs(\n    title = \"Number of Patents by Customer Status\",\n    x = \"Patents (Last 5 Years)\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;%\n  group_by(iscustomer) %&gt;%\n  summarise(\n    count = n(),\n    mean_patents = mean(patents),\n    sd_patents = sd(patents)\n  )\n\n# A tibble: 2 × 4\n  iscustomer   count mean_patents sd_patents\n  &lt;fct&gt;        &lt;int&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1 Non-Customer  1019         3.47       2.23\n2 Customer       481         4.13       2.55\n\n\nWe observe that Blueprinty customers, on average, have more patents over the past five years. However, this comparison does not yet account for potential confounding variables.\n\n\n\n\nggplot(data, aes(x = region, fill = iscustomer)) +\n  geom_bar(position = \"fill\") +\n  labs(\n    title = \"Regional Distribution by Customer Status\",\n    x = \"Region\",\n    y = \"Proportion of Firms\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThere are noticeable regional differences in customer adoption. Some regions appear to have a higher share of Blueprinty customers.\n\n\n\n\nggplot(data, aes(x = age, fill = iscustomer)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  labs(\n    title = \"Firm Age Distribution by Customer Status\",\n    x = \"Age (Years Since Incorporation)\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;%\n  group_by(iscustomer) %&gt;%\n  summarise(\n    mean_age = mean(age),\n    sd_age = sd(age)\n  )\n\n# A tibble: 2 × 3\n  iscustomer   mean_age sd_age\n  &lt;fct&gt;           &lt;dbl&gt;  &lt;dbl&gt;\n1 Non-Customer     26.1   6.95\n2 Customer         26.9   7.81\n\n\nOn average, customers are older firms. Age may therefore be a confounding factor when evaluating patent success.\n\n\n\n\nWhile customers have more patents on average, they also differ in age and region. These structural differences suggest we should adjust for confounding variables in any attempt to infer a causal impact of Blueprinty’s software.\n\n\n\nSince our outcome variable of interest can only be small integer values per a set unit of time, we can use a Poisson density to model the number of patents awarded to each engineering firm over the last 5 years. We start by estimating a simple Poisson model via Maximum Likelihood.\ntodo: Write down mathematically the likelihood for \\(Y \\sim \\text{Poisson}(\\lambda)\\). Note that \\(f(Y|\\lambda) = e^{-\\lambda}\\lambda^Y/Y!\\).\ntodo: Code the likelihood (or log-likelihood) function for the Poisson model. This is a function of lambda and Y. For example:\npoisson_loglikelihood &lt;- function(lambda, Y){\n   ...\n}\ntodo: Use your function to plot lambda on the horizontal axis and the likelihood (or log-likelihood) on the vertical axis for a range of lambdas (use the observed number of patents as the input for Y).\ntodo: If you’re feeling mathematical, take the first derivative of your likelihood or log-likelihood, set it equal to zero and solve for lambda. You will find lambda_mle is Ybar, which “feels right” because the mean of a Poisson distribution is lambda.\ntodo: Find the MLE by optimizing your likelihood function with optim() in R or sp.optimize() in Python.\n\n\n\nNext, we extend our simple Poisson model to a Poisson Regression Model such that \\(Y_i = \\text{Poisson}(\\lambda_i)\\) where \\(\\lambda_i = \\exp(X_i'\\beta)\\). The interpretation is that the success rate of patent awards is not constant across all firms (\\(\\lambda\\)) but rather is a function of firm characteristics \\(X_i\\). Specifically, we will use the covariates age, age squared, region, and whether the firm is a customer of Blueprinty.\ntodo: Update your likelihood or log-likelihood function with an additional argument to take in a covariate matrix X. Also change the parameter of the model from lambda to the beta vector. In this model, lambda must be a positive number, so we choose the inverse link function g_inv() to be exp() so that \\(\\lambda_i = e^{X_i'\\beta}\\). For example:\npoisson_regression_likelihood &lt;- function(beta, Y, X){\n   ...\n}\ntodo: Use your function along with R’s optim() or Python’s sp.optimize() to find the MLE vector and the Hessian of the Poisson model with covariates. Specifically, the first column of X should be all 1’s to enable a constant term in the model, and the subsequent columns should be age, age squared, binary variables for all but one of the regions, and the binary customer variable. Use the Hessian to find standard errors of the beta parameter estimates and present a table of coefficients and standard errors.\ntodo: Check your results using R’s glm() function or Python sm.GLM() function.\ntodo: Interpret the results.\ntodo: What do you conclude about the effect of Blueprinty’s software on patent success? Because the beta coefficients are not directly interpretable, it may help to create two fake datasets: X_0 and X_1 where X_0 is the X data but with iscustomer=0 for every observation and X_1 is the X data but with iscustomer=1 for every observation. Then, use X_0 and your fitted model to get the vector of predicted number of patents (y_pred_0) for every firm in the dataset, and use X_1 to get Y_pred_1 for every firm. Then subtract y_pred_1 minus y_pred_0 and take the average of that vector of differences."
  },
  {
    "objectID": "blog/project3/hw2_questions.html#airbnb-case-study",
    "href": "blog/project3/hw2_questions.html#airbnb-case-study",
    "title": "Poisson Regression Examples",
    "section": "AirBnB Case Study",
    "text": "AirBnB Case Study\n\nIntroduction\nAirBnB is a popular platform for booking short-term rentals. In March 2017, students Annika Awad, Evan Lebo, and Anna Linden scraped of 40,000 Airbnb listings from New York City. The data include the following variables:\n\n\n\n\n\n\nVariable Definitions\n\n\n\n\n\n- `id` = unique ID number for each unit\n- `last_scraped` = date when information scraped\n- `host_since` = date when host first listed the unit on Airbnb\n- `days` = `last_scraped` - `host_since` = number of days the unit has been listed\n- `room_type` = Entire home/apt., Private room, or Shared room\n- `bathrooms` = number of bathrooms\n- `bedrooms` = number of bedrooms\n- `price` = price per night (dollars)\n- `number_of_reviews` = number of reviews for the unit on Airbnb\n- `review_scores_cleanliness` = a cleanliness score from reviews (1-10)\n- `review_scores_location` = a \"quality of location\" score from reviews (1-10)\n- `review_scores_value` = a \"quality of value\" score from reviews (1-10)\n- `instant_bookable` = \"t\" if instantly bookable, \"f\" if not\n\n\n\ntodo: Assume the number of reviews is a good proxy for the number of bookings. Perform some exploratory data analysis to get a feel for the data, handle or drop observations with missing values on relevant variables, build one or more models (e.g., a poisson regression model for the number of bookings as proxied by the number of reviews), and interpret model coefficients to describe variation in the number of reviews as a function of the variables provided.{r patent-summary} data %&gt;% group_by(iscustomer) %&gt;% summarise( count = n(), mean_patents = mean(patents), sd_patents = sd(patents) )"
  },
  {
    "objectID": "blog/project3/blueprinty_case.html",
    "href": "blog/project3/blueprinty_case.html",
    "title": "Blueprinty Case Study",
    "section": "",
    "text": "Blueprinty is a small software firm that develops tools for creating blueprints used in patent applications. The marketing team wants to make the case that firms using Blueprinty’s product are more successful in getting patents approved.\nAlthough we don’t have before-and-after data, Blueprinty has collected cross-sectional data on 1,500 mature engineering firms, including number of patents awarded in the last 5 years, region, firm age, and whether or not the firm uses their software.\n\n\n\n\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\ndata &lt;- read_csv(\"blueprinty.csv\")\n\nRows: 1500 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): region\ndbl (3): patents, age, iscustomer\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata &lt;- data %&gt;%\n  mutate(\n    iscustomer = factor(iscustomer, levels = c(0, 1), labels = c(\"Non-Customer\", \"Customer\"))\n  )\n\n\n\n\nggplot(data, aes(x = patents, fill = iscustomer)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  labs(\n    title = \"Number of Patents by Customer Status\",\n    x = \"Patents (Last 5 Years)\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;%\n  group_by(iscustomer) %&gt;%\n  summarise(\n    count = n(),\n    mean_patents = mean(patents),\n    sd_patents = sd(patents)\n  )\n\n# A tibble: 2 × 4\n  iscustomer   count mean_patents sd_patents\n  &lt;fct&gt;        &lt;int&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1 Non-Customer  1019         3.47       2.23\n2 Customer       481         4.13       2.55\n\n\nWe observe that Blueprinty customers, on average, have more patents over the past five years. However, this comparison does not yet account for potential confounding variables.\n\n\n\n\nggplot(data, aes(x = region, fill = iscustomer)) +\n  geom_bar(position = \"fill\") +\n  labs(\n    title = \"Regional Distribution by Customer Status\",\n    x = \"Region\",\n    y = \"Proportion of Firms\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThere are noticeable regional differences in customer adoption. Some regions appear to have a higher share of Blueprinty customers.\n\n\n\n\nggplot(data, aes(x = age, fill = iscustomer)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  labs(\n    title = \"Firm Age Distribution by Customer Status\",\n    x = \"Age (Years Since Incorporation)\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;%\n  group_by(iscustomer) %&gt;%\n  summarise(\n    mean_age = mean(age),\n    sd_age = sd(age)\n  )\n\n# A tibble: 2 × 3\n  iscustomer   mean_age sd_age\n  &lt;fct&gt;           &lt;dbl&gt;  &lt;dbl&gt;\n1 Non-Customer     26.1   6.95\n2 Customer         26.9   7.81\n\n\nOn average, customers are older firms. Age may therefore be a confounding factor when evaluating patent success.\n\n\n\n\nWhile customers have more patents on average, they also differ in age and region. These structural differences suggest we should adjust for confounding variables in any attempt to infer a causal impact of Blueprinty’s software."
  },
  {
    "objectID": "blog/project3/blueprinty_case.html#blueprinty-case-study",
    "href": "blog/project3/blueprinty_case.html#blueprinty-case-study",
    "title": "Blueprinty Case Study",
    "section": "",
    "text": "Blueprinty is a small software firm that develops tools for creating blueprints used in patent applications. The marketing team wants to make the case that firms using Blueprinty’s product are more successful in getting patents approved.\nAlthough we don’t have before-and-after data, Blueprinty has collected cross-sectional data on 1,500 mature engineering firms, including number of patents awarded in the last 5 years, region, firm age, and whether or not the firm uses their software.\n\n\n\n\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\ndata &lt;- read_csv(\"blueprinty.csv\")\n\nRows: 1500 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): region\ndbl (3): patents, age, iscustomer\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata &lt;- data %&gt;%\n  mutate(\n    iscustomer = factor(iscustomer, levels = c(0, 1), labels = c(\"Non-Customer\", \"Customer\"))\n  )\n\n\n\n\nggplot(data, aes(x = patents, fill = iscustomer)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  labs(\n    title = \"Number of Patents by Customer Status\",\n    x = \"Patents (Last 5 Years)\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;%\n  group_by(iscustomer) %&gt;%\n  summarise(\n    count = n(),\n    mean_patents = mean(patents),\n    sd_patents = sd(patents)\n  )\n\n# A tibble: 2 × 4\n  iscustomer   count mean_patents sd_patents\n  &lt;fct&gt;        &lt;int&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1 Non-Customer  1019         3.47       2.23\n2 Customer       481         4.13       2.55\n\n\nWe observe that Blueprinty customers, on average, have more patents over the past five years. However, this comparison does not yet account for potential confounding variables.\n\n\n\n\nggplot(data, aes(x = region, fill = iscustomer)) +\n  geom_bar(position = \"fill\") +\n  labs(\n    title = \"Regional Distribution by Customer Status\",\n    x = \"Region\",\n    y = \"Proportion of Firms\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThere are noticeable regional differences in customer adoption. Some regions appear to have a higher share of Blueprinty customers.\n\n\n\n\nggplot(data, aes(x = age, fill = iscustomer)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n  labs(\n    title = \"Firm Age Distribution by Customer Status\",\n    x = \"Age (Years Since Incorporation)\",\n    fill = \"Customer Status\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;%\n  group_by(iscustomer) %&gt;%\n  summarise(\n    mean_age = mean(age),\n    sd_age = sd(age)\n  )\n\n# A tibble: 2 × 3\n  iscustomer   mean_age sd_age\n  &lt;fct&gt;           &lt;dbl&gt;  &lt;dbl&gt;\n1 Non-Customer     26.1   6.95\n2 Customer         26.9   7.81\n\n\nOn average, customers are older firms. Age may therefore be a confounding factor when evaluating patent success.\n\n\n\n\nWhile customers have more patents on average, they also differ in age and region. These structural differences suggest we should adjust for confounding variables in any attempt to infer a causal impact of Blueprinty’s software."
  }
]